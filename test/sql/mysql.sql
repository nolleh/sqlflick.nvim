DROP TABLE ACCOUNT_TEST;
CREATE TABLE ACCOUNT_TEST
(
	USER_ID INT PRIMARY KEY AUTO_INCREMENT,
	USERNAME VARCHAR(50) UNIQUE NOT NULL,
	PASSWORD VARCHAR(50) NOT NULL,
	EMAIL VARCHAR(355) UNIQUE NOT NULL,
	CREATED_ON TIMESTAMP NOT NULL DEFAULT NOW(),
	LAST_LOGIN TIMESTAMP DEFAULT NOW()
);

-- Basic inserts with different timestamp patterns
INSERT INTO ACCOUNT_TEST (USERNAME, PASSWORD, EMAIL, CREATED_ON, LAST_LOGIN)
VALUES ('john_doe', 'pass123', 'john@example.com', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

INSERT INTO ACCOUNT_TEST (USERNAME, PASSWORD, EMAIL, CREATED_ON, LAST_LOGIN)
VALUES ('jane_smith', 'secure456', 'jane@example.com', '2024-01-01 10:00:00', '2024-01-01 10:30:00');

INSERT INTO ACCOUNT_TEST (USERNAME, PASSWORD, EMAIL, CREATED_ON)
VALUES ('new_user', 'welcome789', 'new@example.com', CURRENT_TIMESTAMP);

-- Batch insert
INSERT INTO ACCOUNT_TEST (USERNAME, PASSWORD, EMAIL, CREATED_ON, LAST_LOGIN)
VALUES
    ('alice_wonder', 'alice123', 'alice@example.com', '2024-02-15 08:30:00', '2024-02-15 09:00:00'),
    ('bob_builder', 'bob456', 'bob@example.com', '2024-02-15 09:15:00', '2024-02-15 10:00:00');

-- Simple select statements
SELECT * FROM ACCOUNT_TEST WHERE LAST_LOGIN IS NOT NULL;
SELECT USERNAME, EMAIL, CREATED_ON FROM ACCOUNT_TEST ORDER BY CREATED_ON DESC;
SELECT COUNT(*) as active_users FROM ACCOUNT_TEST WHERE LAST_LOGIN >= NOW() - INTERVAL '1 day';

-- Update statements with timestamp handling
UPDATE ACCOUNT_TEST
SET LAST_LOGIN = NOW()
WHERE USERNAME = 'john_doe';

UPDATE ACCOUNT_TEST
SET PASSWORD = 'newpass123',
    LAST_LOGIN = NOW()
WHERE EMAIL = 'jane@example.com';

-- Select to verify updates
SELECT USERNAME, LAST_LOGIN
FROM ACCOUNT_TEST
WHERE USERNAME IN ('john_doe', 'jane_smith')
ORDER BY LAST_LOGIN DESC;

